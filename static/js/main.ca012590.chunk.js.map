{"version":3,"sources":["components/useForms.js","components/Confirm.js","components/Signup.js","components/Success.js","components/Forms.js","App.js","reportWebVitals.js","index.js"],"names":["useForms","callback","confirm","useState","name","email","password","password2","values","setValues","errors","setErrors","mainSubmit","setMainSubmit","useEffect","Object","keys","length","handleChange","e","target","value","handleSubmit","preventDefault","Confrim","trim","Signup","submitForms","className","onSubmit","htmlFor","id","type","placeholder","onChange","href","Success","Forms","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca012590.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\"\r\n\r\nconst useForms = (callback,confirm) => {\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    })\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [mainSubmit, setMainSubmit] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        setErrors(confirm(values))\r\n        setMainSubmit(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && mainSubmit){\r\n            callback()\r\n        }\r\n    },\r\n    [errors]\r\n    )\r\n\r\n    return {handleChange, values, handleSubmit, errors};\r\n};\r\n\r\nexport default useForms;","export default function Confrim (values){\r\n    let errors = {}\r\n\r\n    if (!values.name.trim()) {\r\n        errors.name = \"Name Required\"\r\n    }\r\n\r\n    if (!values.email.trim()) {\r\n        errors.email = \"Email Required\"\r\n    }\r\n\r\n\r\n    if (!values.password.trim()) {\r\n        errors.password = \"Password Required\"\r\n    } else if (values.password.length < 6){\r\n        errors.password = \"Password needs to be 6 characters or more.\"\r\n    }\r\n\r\n    if(!values.password2){\r\n        errors.password2 = \"Re-enter Your Password\"\r\n    }   else if(values.password2 !== values.password){\r\n        errors.password2 = \"Passwords do not match\"\r\n    }\r\n\r\n    return errors;\r\n\r\n}","import  React from 'react'\r\nimport useForms from \"./useForms\"\r\nimport confirm from \"./Confirm\"\r\nimport \"./Forms.css\"\r\n\r\nconst Signup = ({submitForms}) => {\r\n\r\n    const { handleChange, values, handleSubmit, errors} = useForms(submitForms, confirm)\r\n\r\n\r\n    return(\r\n    <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n            <div>\r\n                <h2 className=\"title\">Create Account</h2>\r\n            </div>\r\n            <form className=\"form-wrapper\" onSubmit={handleSubmit }>\r\n                <div className=\"test\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input className=\"name\" id=\"name\" name=\"name\" type=\"text\" placeholder=\"Enter Your Name\" value={values.name} onChange={handleChange}/>\r\n                    {errors.name && <p>{errors.name}</p>}\r\n                </div>\r\n                <div className=\"test\">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input className=\"email\" id=\"email\" name=\"email\" type=\"email\" placeholder=\"Enter Your Email\" value={values.email} onChange={handleChange}/>\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                </div>\r\n                <div className=\"test\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input className=\"password\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password here\" value={values.password} onChange={handleChange}/>\r\n                    {errors.password && <p>{errors.password}</p>}\r\n                </div>\r\n                <div className=\"test\">\r\n                    <label htmlFor=\"password2\">Confrim Password:</label>\r\n                    <input className=\"password2\" id=\"password2\"  name=\"password2\" type=\"password\" placeholder=\"Re-enter your password\" value={values.password2} onChange={handleChange}/>\r\n                    {errors.password2 && <p>{errors.password2}</p>}\r\n                </div>\r\n                <div>\r\n                    <button className=\"submit\" type=\"submit\"> Sign-Up </button>\r\n                     <span className=\"submit-login\">\r\n                         Already have an account? Sign-in <a href=\"#\">here</a>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\nimport \"./Forms.css\"\r\n\r\nconst Success = () => {\r\n    return (\r\n       <div className=\"forms-main-content\">\r\n           <div className=\"forms-success\">\r\n               We Have Reveived Your Request!\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Success\r\n","import React, { useState } from 'react';\r\nimport Signup from \"./Signup\";\r\nimport Success from \"./Success\"\r\nimport \"./Forms.css\"\r\n\r\nconst Forms = () => {\r\n    const [mainSubmit, setMainSubmit] = useState(false)\r\n\r\n    function submitForms(){\r\n        setMainSubmit(true)\r\n    }\r\n    return (\r\n        <div>\r\n           {!mainSubmit ? <Signup submitForms={submitForms} /> : <Success />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forms\r\n","import React from \"react\";\nimport Forms from \"./components/Forms\"\nimport './App.css';\n\nconst App = () =>{\n  return(\n    <div>\n      <Forms />\n    </div> \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}